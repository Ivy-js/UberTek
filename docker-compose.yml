version: '3.8'

services:
  ubertek-bot:
    build: .
    container_name: ubertek-bot
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - GUILD_ID=${GUILD_ID}
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - ORDERS_CHANNEL_ID=${ORDERS_CHANNEL_ID}
      - BDE_ROLE_ID=${BDE_ROLE_ID}
      - STUDENT_ROLE_ID=${STUDENT_ROLE_ID}
    volumes:
      - ./src:/app/src
    networks:
      - ubertek-network

  db:
    image: postgres:16-alpine
    container_name: ubertek-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ubertek-network

volumes:
  db_data:
    driver: local

networks:
  ubertek-network:
    driver: bridge
